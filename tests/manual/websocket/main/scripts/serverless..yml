service: manual-test-websocket-main

configValidationMode: error
deprecationNotificationMode: error

provider:
  deploymentMethod: direct
  iam:
    role:
      statements:
        - Action:
            - dynamodb:DeleteItem
            - dynamodb:DescribeTable
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:UpdateItem
          Effect: Allow
          Resource: "arn:aws:dynamodb:us-east-1:*:*"
        - Action:
            - "execute-api:ManageConnections"
          Effect: Allow
          Resource:
            - "arn:aws:execute-api:*:*:**/@connections/*"
  name: aws
  runtime: nodejs18.x

functions:
  # http:
  #   handler: handler.http
  #   events:
  #     - http:
  #         path: /http
  #         method: GET
  connect:
    events:
      - websocket:
          route: $connect
          # authorizer: auth
    handler: handler.connect
  # auth:
  #   handler: handler.auth
  disconnect:
    events:
      - websocket:
          route: $disconnect
    handler: handler.disconnect
  default:
    events:
      - websocket:
          route: $default
    handler: handler.defaultHandler
  getClientInfo:
    events:
      - websocket:
          route: getClientInfo
    handler: handler.getClientInfo
  getCallInfo:
    events:
      - websocket:
          route: getCallInfo
    handler: handler.getCallInfo
  makeError:
    events:
      - websocket:
          route: makeError
    handler: handler.makeError
  replyViaCallback:
    events:
      - websocket:
          route: replyViaCallback
    handler: handler.replyViaCallback
  replyErrorViaCallback:
    events:
      - websocket:
          route: replyErrorViaCallback
    handler: handler.replyErrorViaCallback
  multiCall1:
    events:
      - websocket:
          route: makeMultiCalls
    handler: handler.multiCall1
  multiCall2:
    events:
      - websocket:
          route: makeMultiCalls
    handler: handler.multiCall2
  send:
    events:
      - websocket:
          route: send
    handler: handler.send
  registerListener:
    events:
      - websocket:
          route: registerListener
    handler: handler.registerListener
  deleteListener:
    events:
      - websocket:
          route: deleteListener
    handler: handler.deleteListener

resources:
  Resources:
    ListenersTable:
      Properties:
        AttributeDefinitions:
          - AttributeName: name
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: name
            KeyType: HASH
        TableName: listeners
      Type: "AWS::DynamoDB::Table"
